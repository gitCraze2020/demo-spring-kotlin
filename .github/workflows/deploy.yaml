name: Deploy

on: [push]

jobs:
  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      # download file, run through util base64, set stdout result as secret key
#      - name: Authenticate to GCP
#        uses: actions/gcloud/auth@master
#        env:
#          GCLOUD_AUTH: ${{ secrets.GCP_SA_KEY }}

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}


#      - name: Configure Docker for GCR
#        uses: actions/gcloud/cli@master
#        with:
#          args: "auth configure-docker --quiet"

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      - name: Build image
        uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      - run: ./mvnw compile jib:dockerBuild -Djib.to.image-gcr.io/${{ secrets.GCP_PROJECT }}/demo-spring-kotlin:${{ github.sha }}

#      - name: Push image to GCR
#        uses: actions/gcloud/cli@master
#        with:
#          entrypoint: sh
#          args: -c "docker push gcr.io/${{ secrets.GCP_PROJECT }}/demo-spring-kotlin:${{ github.sha }}

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:$GITHUB_SHA

      - name: Prepare service manifest
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT }}
          APP_NAME: demo-spring-kotlin
        run: envsubst < .github/template.yaml > .github/service.yaml

      - name: Install kubectl and deploy services
        uses: actions/gcloud/cli@master
        with:
          args: 'components install kubectl --quiet && gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }} --project $secrets.GCP_PROJECT }} --zone ${{ secrets.CLUSTER_ZONE }} && kubectl apply -f .github/service.yaml -n ${{ secrets.CLUSTER_NS }}'

